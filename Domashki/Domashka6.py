# - С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension
#   *В этом случае можно пропустить совсем тривиальные 
#   (т.е. задачу 1 или 2 тут точно решать не имеет смысла).*
#   Три задачи.

# Задача 3.1
# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.
# Пример:
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# Было
# a = input('Введите список через пробелы:\n').split(' ')
# sum_a = 0
# for i in range(1,len(a),2):
#     sum_a += int(a[i])
# print('Сумма на нечётных элементов', sum_a)

# Стало
# print('Сумма на нечётных элементов = ', sum([i for index, i in enumerate(list(map(lambda x: int(x), input('Введите список через пробелы:\n').split()))) if index % 2 != 0]))

# Задача 3.3
# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между
# максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# Было
# a = [1.1, 1.2, 3.1, 5, 10.01]
# a_drob = []
# for i in range(len(a)):
#     if round(abs(float(a[i])) % 1, 3) != 0:
#         a_drob.append(round(abs(float(a[i])) % 1, 3))
# a_drob.sort()
# print('Разница между максимальной и минимальной дробной частью:', a_drob[len(a_drob)-1] - a_drob[0])

# Стало
# a = [1.1, 1.2, 3.1, 5, 10.01]
# a = sorted(list(filter(lambda y: y != 0, list(map(lambda x: round(abs(float(x)) % 1, 3), a)))))
# print(a[-1]-a[0])

# Задача 4.3
# Задайте последовательность чисел. Напишите программу, которая выведет список
# неповторяющихся элементов исходной последовательности.
# задача 3 через словарь

# Было
# chisla = [1,2,3,4,5,6,7,4,5,6,7]
# scet = {}
# for i in chisla:
#     scet[i] = scet.get(i,0) + 1
# chisla.clear()
# for k in scet.keys():
#     if scet[k] == 1:
#         chisla.append(k)
# print(chisla)

# Стало
# chisla = [1,2,3,4,5,6,7,4,5,6,7]
# chisla = [i for index, i in enumerate(chisla) if i not in chisla[:index] and i not in chisla[index+1:]]
# print(chisla)