# Задача 3.1
# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.
# Пример:
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# a = input('Введите список через пробелы:\n').split(' ')
# sum_a = 0
# for i in range(1,len(a),2):
#     sum_a += int(a[i])
# print('Сумма на нечётных элементов', sum_a)

# Задача 3.2
# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент,
# второй и предпоследний и т.д.
# обратная нумерация
# Пример:
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]

# a = [2, 3, 4, 5, 6]
# print(a)
# proiz = []
# for i in range(int(len(a) / 2) + (1 if (len(a) % 2) > 0 else 0)):
#     proiz.append(a[i] * a[-(i+1)])
# print('Произведение равно:', proiz)

# Задача 3.3
# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между
# максимальным и минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# # a = input('Введите список через пробелы:\n').split(' ')
# a = [1.1, 1.2, 3.1, 5, 10.01]
# a_drob = []
# for i in range(len(a)):
#     if round(abs(float(a[i])) % 1, 3) != 0:
#         a_drob.append(round(abs(float(a[i])) % 1, 3))
# a_drob.sort()
# print('Разница между максимальной и минимальной дробной частью:', a_drob[len(a_drob)-1] - a_drob[0])

# Задача 3.4
# Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

# Вариант 1 через цикл
# import math
# a = int(input('Введите число: '))
# a_bin = ''
# for i in range(int(math.log(a) / math.log(2)) + 1):
#     a_bin = str(a % 2) + a_bin
#     a //= 2
# print(a_bin)

# Вариант 2 через рекурсию
# def to_bin(a, a_bin=''):
#     if a <= 1:
#         return str(a) + a_bin
#     else:
#         return to_bin(a // 2, str(a % 2) + a_bin)
# chislo = int(input('Введите число: '))
# print('В бинарной системе:',to_bin(chislo))

# Задача 3.5
# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# Пример:
# - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]

# k = 8
# fib_pol = [0, 1]
# fib_otr = [0, 1]
# for i in range(k-1):
#     fib_pol.append(fib_pol[i]+fib_pol[i+1])
#     fib_otr.append(fib_otr[i]-fib_otr[i+1])
# fib_otr.remove(0)
# fib_otr.reverse()
# fib_otr.extend(fib_pol)
# print(fib_otr)